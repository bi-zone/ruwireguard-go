/* SPDX-License-Identifier: MIT
 *
 * Copyright (C) 2020 BI.ZONE LLC. All Rights Reserved.
 */

package set

import (
	"testing"

	"github.com/google/go-cmp/cmp"

	"github.com/bi-zone/ruwireguard-go/wgctrl/wgtypes"
)

func TestSyncConf(t *testing.T) {
	oldDevice := &wgtypes.Device{
		Peers: []wgtypes.Peer{
			{PublicKey: wgtypes.Key{0x03, 0x0a, 0x07, 0xb2, 0x59, 0x17, 0xa7, 0x14, 0xb3, 0x19, 0x4e, 0x12, 0x5a, 0x5c, 0x18, 0x56, 0x6b, 0xd5, 0x84, 0x35, 0xd1, 0x05, 0xf6, 0xd2, 0xfa, 0xeb, 0x91, 0x90, 0xa3, 0xa6, 0x28, 0x35, 0x35}},
			{PublicKey: wgtypes.Key{0x02, 0xd0, 0x19, 0x45, 0x37, 0xec, 0x19, 0xd7, 0x96, 0xd4, 0x45, 0xf1, 0xd3, 0x27, 0x8e, 0xf4, 0xa6, 0x3e, 0x70, 0x0f, 0x78, 0x90, 0x93, 0x0f, 0x2f, 0xbd, 0x50, 0xd6, 0xe1, 0xca, 0xc7, 0x1e, 0xae}},

			// peers to delete
			{PublicKey: wgtypes.Key{0x02, 0x5d, 0xb6, 0xb5, 0x1d, 0xb5, 0x12, 0xf5, 0x75, 0x9a, 0x5c, 0xb8, 0xd8, 0x08, 0xfe, 0xfc, 0x5e, 0xed, 0x8f, 0xfe, 0xbd, 0x3a, 0x32, 0x5a, 0x44, 0xc4, 0x7d, 0xc1, 0x33, 0x90, 0x58, 0xfc, 0x95}},
			{PublicKey: wgtypes.Key{0x03, 0x3f, 0x87, 0xb1, 0x5e, 0x7b, 0x43, 0xc4, 0x00, 0xa0, 0x4e, 0x58, 0x9b, 0x35, 0x0e, 0x13, 0x78, 0xa9, 0x7a, 0x23, 0xfb, 0x3d, 0xb0, 0x34, 0xd1, 0x79, 0xf1, 0xeb, 0x34, 0x70, 0x53, 0xb0, 0x37}},
			{PublicKey: wgtypes.Key{0x03, 0x35, 0x15, 0x66, 0x55, 0x7b, 0xa0, 0x0d, 0x83, 0x6b, 0x77, 0x67, 0xa6, 0xd4, 0xed, 0x22, 0x7e, 0xf7, 0x6a, 0x63, 0x3e, 0x2b, 0xa8, 0x0a, 0x56, 0x24, 0x4d, 0x0d, 0x54, 0x6e, 0x32, 0xa6, 0x96}},
		},
	}

	newDeviceConfig := &wgtypes.Config{
		Peers: []wgtypes.PeerConfig{
			// old peers
			{PublicKey: wgtypes.Key{0x03, 0x0a, 0x07, 0xb2, 0x59, 0x17, 0xa7, 0x14, 0xb3, 0x19, 0x4e, 0x12, 0x5a, 0x5c, 0x18, 0x56, 0x6b, 0xd5, 0x84, 0x35, 0xd1, 0x05, 0xf6, 0xd2, 0xfa, 0xeb, 0x91, 0x90, 0xa3, 0xa6, 0x28, 0x35, 0x35}},
			{PublicKey: wgtypes.Key{0x02, 0xd0, 0x19, 0x45, 0x37, 0xec, 0x19, 0xd7, 0x96, 0xd4, 0x45, 0xf1, 0xd3, 0x27, 0x8e, 0xf4, 0xa6, 0x3e, 0x70, 0x0f, 0x78, 0x90, 0x93, 0x0f, 0x2f, 0xbd, 0x50, 0xd6, 0xe1, 0xca, 0xc7, 0x1e, 0xae}},

			// new peers
			{PublicKey: wgtypes.Key{0x02, 0xfa, 0xc9, 0xce, 0x72, 0xc0, 0x85, 0xc9, 0x23, 0x11, 0x74, 0x94, 0x02, 0x7c, 0x9b, 0x6c, 0xf2, 0x28, 0x78, 0xec, 0x05, 0x21, 0x32, 0x52, 0x88, 0x9a, 0x9d, 0x57, 0x6c, 0x4e, 0x9e, 0x77, 0xf3}},
			{PublicKey: wgtypes.Key{0x03, 0xb8, 0x31, 0x6e, 0x95, 0x6f, 0x83, 0x2e, 0xae, 0x3d, 0xc4, 0x22, 0x6c, 0xc4, 0x7f, 0x39, 0x58, 0x25, 0xbc, 0x1a, 0x98, 0x2b, 0x51, 0x9c, 0x13, 0x2c, 0x98, 0x27, 0xb2, 0x1c, 0xf7, 0xe5, 0xef}},
		},
	}

	expectedDeviceConfig := &wgtypes.Config{
		Peers: []wgtypes.PeerConfig{
			// old peers
			{PublicKey: wgtypes.Key{0x03, 0x0a, 0x07, 0xb2, 0x59, 0x17, 0xa7, 0x14, 0xb3, 0x19, 0x4e, 0x12, 0x5a, 0x5c, 0x18, 0x56, 0x6b, 0xd5, 0x84, 0x35, 0xd1, 0x05, 0xf6, 0xd2, 0xfa, 0xeb, 0x91, 0x90, 0xa3, 0xa6, 0x28, 0x35, 0x35}},
			{PublicKey: wgtypes.Key{0x02, 0xd0, 0x19, 0x45, 0x37, 0xec, 0x19, 0xd7, 0x96, 0xd4, 0x45, 0xf1, 0xd3, 0x27, 0x8e, 0xf4, 0xa6, 0x3e, 0x70, 0x0f, 0x78, 0x90, 0x93, 0x0f, 0x2f, 0xbd, 0x50, 0xd6, 0xe1, 0xca, 0xc7, 0x1e, 0xae}},

			// new peers
			{PublicKey: wgtypes.Key{0x02, 0xfa, 0xc9, 0xce, 0x72, 0xc0, 0x85, 0xc9, 0x23, 0x11, 0x74, 0x94, 0x02, 0x7c, 0x9b, 0x6c, 0xf2, 0x28, 0x78, 0xec, 0x05, 0x21, 0x32, 0x52, 0x88, 0x9a, 0x9d, 0x57, 0x6c, 0x4e, 0x9e, 0x77, 0xf3}},
			{PublicKey: wgtypes.Key{0x03, 0xb8, 0x31, 0x6e, 0x95, 0x6f, 0x83, 0x2e, 0xae, 0x3d, 0xc4, 0x22, 0x6c, 0xc4, 0x7f, 0x39, 0x58, 0x25, 0xbc, 0x1a, 0x98, 0x2b, 0x51, 0x9c, 0x13, 0x2c, 0x98, 0x27, 0xb2, 0x1c, 0xf7, 0xe5, 0xef}},

			// peers to delete
			{
				PublicKey: wgtypes.Key{0x02, 0x5d, 0xb6, 0xb5, 0x1d, 0xb5, 0x12, 0xf5, 0x75, 0x9a, 0x5c, 0xb8, 0xd8, 0x08, 0xfe, 0xfc, 0x5e, 0xed, 0x8f, 0xfe, 0xbd, 0x3a, 0x32, 0x5a, 0x44, 0xc4, 0x7d, 0xc1, 0x33, 0x90, 0x58, 0xfc, 0x95},
				Remove:    true,
			},
			{
				PublicKey: wgtypes.Key{0x03, 0x3f, 0x87, 0xb1, 0x5e, 0x7b, 0x43, 0xc4, 0x00, 0xa0, 0x4e, 0x58, 0x9b, 0x35, 0x0e, 0x13, 0x78, 0xa9, 0x7a, 0x23, 0xfb, 0x3d, 0xb0, 0x34, 0xd1, 0x79, 0xf1, 0xeb, 0x34, 0x70, 0x53, 0xb0, 0x37},
				Remove:    true,
			},
			{
				PublicKey: wgtypes.Key{0x03, 0x35, 0x15, 0x66, 0x55, 0x7b, 0xa0, 0x0d, 0x83, 0x6b, 0x77, 0x67, 0xa6, 0xd4, 0xed, 0x22, 0x7e, 0xf7, 0x6a, 0x63, 0x3e, 0x2b, 0xa8, 0x0a, 0x56, 0x24, 0x4d, 0x0d, 0x54, 0x6e, 0x32, 0xa6, 0x96},
				Remove:    true,
			},
		},
	}

	syncConf(oldDevice, newDeviceConfig)

	if diff := cmp.Diff(newDeviceConfig, expectedDeviceConfig); diff != "" {
		t.Errorf("syncConf() mismatch (-want +got):\n%s", diff)
		t.Fail()
	}
}
